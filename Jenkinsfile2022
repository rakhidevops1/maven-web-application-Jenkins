@Library('sharedlibrss') _

pipeline{

    agent any
    tools{
    maven 'Maven3.8.6'
        }
        triggers{
        pollSCM('* * * * *')
        }
    options{
    buildDiscarder(logRotator(artifactDaysToKeepStr: '5', artifactNumToKeepStr: '5', daysToKeepStr: '5', numToKeepStr: '5'))
    }
    stages{
        
      stage('CheckOutCode'){
        steps{
            sendSlackNotifications("STARTED")
            git credentialsId: 'githubcredentials', url: 'https://github.com/rakhidevops1/maven-web-application-Jenkins.git'
    	}
      } //closing checkout
      stage('Build'){
        steps{
            sendSlackNotifications("BUILDINGWARPACKAGE")
             sh  "mvn clean package"
    	}
      } //closing Build
      stage('ExecuteSonarQubeReport'){
        steps{
            sendSlackNotifications("RUNNINGSONAR")
             sh  "mvn clean sonar:sonar"
    	}
      }//closing ExecuteSonarQubeReport
      stage('UploadArtifactsIntoNexus'){
        steps{
            sendSlackNotifications("UPLOADINGARTIFACTS")
             sh  "mvn clean deploy"
    	}
      }//closing UploadArtifactsIntoNexus
      stage('DeployAppIntoTomcat'){
      steps{
          
        sshagent(['tomcatCredentialsForSCP']) {
                  sendSlackNotifications("DEPLOYINGTOTOMCAT") 
                   sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.24.225:/opt/apache-tomcat-9.0.68/webapps/"  
                }
      }
      }//closing DeployAppIntoTomcat
    }//stages closing
    post{
        aborted{
            sendSlackNotifications(currentBuild.result)
        }
        success{
            sendSlackNotifications(currentBuild.result)
        }
        failure{
            sendSlackNotifications(currentBuild.result)
        }
    }
    
    }//pipeline closing
    
   
